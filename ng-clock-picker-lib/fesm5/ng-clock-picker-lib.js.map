{"version":3,"file":"ng-clock-picker-lib.js.map","sources":["ng://ng-clock-picker-lib/lib/classes/abstract-value-accessor.ts","ng://ng-clock-picker-lib/lib/services/dynamic-components.service.ts","ng://ng-clock-picker-lib/lib/classes/abstract-dialog.ts","ng://ng-clock-picker-lib/lib/classes/vertical-event-handler.ts","ng://ng-clock-picker-lib/lib/utils/constants.ts","ng://ng-clock-picker-lib/lib/utils/time.ts","ng://ng-clock-picker-lib/lib/services/clock-picker.service.ts","ng://ng-clock-picker-lib/lib/components/clock-picker-dialog/clock-picker-dialog.component.ts","ng://ng-clock-picker-lib/lib/services/clock-picker-dialog.service.ts","ng://ng-clock-picker-lib/lib/directives/clock-picker.directive.ts","ng://ng-clock-picker-lib/lib/animations/scale-in.ts","ng://ng-clock-picker-lib/lib/components/circle/circle.component.ts","ng://ng-clock-picker-lib/lib/components/circle-button/circle-button.component.ts","ng://ng-clock-picker-lib/lib/components/time-display/time-display.component.ts","ng://ng-clock-picker-lib/lib/directives/movement-emitter.directive.ts","ng://ng-clock-picker-lib/lib/animations/hours-mode-slide.ts","ng://ng-clock-picker-lib/lib/components/hours-mode-panel/hours-mode-panel.component.ts","ng://ng-clock-picker-lib/lib/ng-clock-picker-lib.module.ts"],"sourcesContent":["import { ControlValueAccessor } from '@angular/forms';\n\n\nexport class AbstractValueAccessor implements ControlValueAccessor {\n  constructor() {}\n  _value: any;\n  onChange(obj: any): void {}\n  onTouched(): void {}\n  writeValue(obj: any): void {\n    this._value = obj;\n    this.onChange(obj);\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n}\n","import { Injectable, ComponentFactoryResolver, ViewContainerRef, Type } from '@angular/core';\n\nimport { DialogComponent } from '../classes/abstract-dialog';\nimport { ClockPickerConfig } from '../interfaces';\n\n@Injectable()\nexport class DynamicComponentsService {\n\n  constructor(private componentFactoryResolver: ComponentFactoryResolver) { }\n\n  public loadDynamicComponent<T extends DialogComponent>(\n    component: Type<T>,\n    vcr: ViewContainerRef,\n    subscriber,\n    config?: ClockPickerConfig\n  ) {\n    const factory: any = this.componentFactoryResolver.resolveComponentFactory(component);\n    const componentRef = vcr.createComponent(factory);\n\n\n    for (const key in config) {\n      (<T>componentRef.instance)[key] = config[key];\n    }\n\n    (<T>componentRef.instance).close = (data: any) => {\n      componentRef.destroy();\n      subscriber.next(data);\n    };\n  }\n}\n","export abstract class DialogComponent {\n\n  constructor() { }\n\n  wrapperClassName: string;\n  buttonClose = 'close';\n  buttonConfirm = 'confirm';\n  closeOnOverlayClick = false;\n  close(data: any): void {}\n\n}\n","import { Subject } from \"rxjs\";\n\nexport class VerticalEventHandler {\n  static MovementUp = 'up';\n  static MovementDown = 'down';\n\n  previousClientY: number | null = null;\n  currentClientY: number | null = null;\n  isMoveLocked = true;\n  verticalMovementEmitter: Subject<string> = new Subject<string>();\n\n  constructor() {}\n\n  setMoveLock(isLocked: boolean) {\n    this.isMoveLocked = isLocked;\n  }\n\n  handleMove(event: MouseEvent | TouchEvent): void {\n    return event instanceof MouseEvent\n      ? this.handleMouseMove(event)\n      : this.handleTouchMove(event);\n\n  }\n\n  handleMouseMove(event: MouseEvent) {\n    const { clientY } = event;\n    const delta = this.calculateDelta(clientY);\n\n    if (this.isMoveLocked) { return null; }\n\n    this.emitMovementDirection(delta);\n  }\n\n  handleTouchMove(event: TouchEvent) {\n    const { clientY } = event.touches[0];\n    const delta = this.calculateDelta(clientY);\n\n    this.emitMovementDirection(delta);\n  }\n\n  emitMovementDirection(delta: number) {\n    if (delta > 0) {\n      this.verticalMovementEmitter.next('down');\n    } else if (delta < 0) {\n      this.verticalMovementEmitter.next('up');\n    }\n  }\n\n  calculateDelta(clientY: number): number {\n    this.previousClientY = this.currentClientY;\n    this.currentClientY = clientY;\n\n    return this.currentClientY - this.previousClientY;\n  }\n\n  handleMouseUp(): void {\n    this.setMoveLock(true);\n  }\n\n  handleMouseDown(): void {\n    this.setMoveLock(false);\n  }\n\n  handleEvent(event: MouseEvent | TouchEvent): void {\n    switch (event.type) {\n      case 'mousemove':\n        return this.handleMove(<MouseEvent>event);\n      case 'mouseup':\n        return this.handleMouseUp();\n      case 'mousedown':\n        return this.handleMouseDown();\n      case 'touchmove':\n        return this.handleMove(<TouchEvent>event);\n    }\n  }\n}\n","export const config = {\n  hours: Array(12).fill(0, 0, 12).map((_, i) => i + 1),\n  minutes: Array(60).fill(0, 0, 60).map((_, i) => i),\n};\n\nexport const defaults = {\n  hours: 12,\n  monutes: 0,\n};\n\nexport const MODE_MINUTES = 'minutes';\nexport const MODE_HOURS = 'hours';\nexport const HOURS_MODE_AM = 'AM';\nexport const HOURS_MODE_PM = 'PM';\n","export function convertToTimeFormat(value: number): string {\n  return value < 10 ? `0${value}` : value.toString();\n}\n\nexport function getTime(hours: number, minutes: number, mode: string): string {\n  const timeString = ` ${hours}:${minutes} ${mode}`;\n  const date = new Date(new Date().toISOString().split('T')[0] + timeString);\n\n  return date.toLocaleTimeString([], {\n    hour: '2-digit',\n    minute: '2-digit',\n  });\n}\n\nexport function getDisplayTime(hours: number, minutes: number, mode: string): string {\n  return getTime(hours, minutes, mode);\n}\n\nexport function parseTime(value: string): number[] {\n  return value\n    .split(':')\n    .map(item => Number(item));\n}\n","import { Injectable } from '@angular/core';\n\nimport { config, HOURS_MODE_AM, MODE_HOURS, MODE_MINUTES, defaults } from '../utils/constants';\nimport { getDisplayTime, parseTime } from '../utils/time';\nimport { SelectedTime } from '../interfaces';\n\n@Injectable()\nexport class ClockPickerService {\n  _mode = MODE_HOURS;\n  _hoursMode = HOURS_MODE_AM;\n  _selected: SelectedTime = { hours: 12, minutes: 0 };\n\n  get mode(): string {\n    return this._mode;\n  }\n\n  get hoursMode(): string {\n    return this._hoursMode;\n  }\n\n  get selected(): SelectedTime {\n    return this._selected;\n  }\n\n  get isHoursMode(): boolean {\n    return this.mode === MODE_HOURS;\n  }\n\n  get isMinutesMode(): boolean {\n    return this.mode === MODE_MINUTES;\n  }\n\n  get fullTime(): string {\n    return getDisplayTime(this.selected.hours, this.selected.minutes, this.hoursMode);\n  }\n\n  reset(): void {\n    this.setHoursMode(HOURS_MODE_AM);\n    this.setMode(MODE_HOURS);\n    this.setHours(12);\n    this.setMinutes(0);\n  }\n\n  increment(mode: string): void {\n    const currentIndex = config[mode].indexOf(this.selected[mode]);\n    const nextIndex = currentIndex + 1;\n    const nextValue = config[mode][nextIndex];\n\n    this._selected[mode] = nextValue || config[mode][0];\n  }\n\n  decrement(mode: string): void {\n    const currentIndex = config[mode].indexOf(this.selected[mode]);\n    const nextIndex = currentIndex - 1;\n    const nextValue = config[mode][nextIndex];\n\n    this._selected[mode] = nextValue || config[mode][config[mode].length - 1];\n  }\n\n  setHours(item: number): void {\n    this._selected.hours = item;\n  }\n\n  setMinutes(item: number): void {\n    this._selected.minutes = item;\n  }\n\n  handleSwitch(mode: string): void {\n    this.setMode(mode);\n  }\n\n  setMode(mode: string): void {\n    this._mode = mode;\n  }\n\n  setHoursMode(mode: string): void {\n    this._hoursMode = mode;\n  }\n\n  setModeToMinutes(): void {\n    this.setMode(MODE_MINUTES);\n  }\n\n  constructor() { }\n}\n","import { Component, ViewEncapsulation, OnDestroy } from '@angular/core';\n\nimport { DialogComponent } from '../../classes/abstract-dialog';\nimport { VerticalEventHandler } from '../../classes/vertical-event-handler'\nimport { ClockPickerService } from '../../services/clock-picker.service';\n\nimport {\n  config,\n  MODE_MINUTES,\n  MODE_HOURS,\n} from '../../utils/constants';\n\n@Component({\n  selector: 'ng-clock-picker-dialog',\n  templateUrl: './clock-picker-dialog.component.html',\n  styleUrls: ['./clock-picker-dialog.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\n\nexport class ClockPickerDialogComponent extends DialogComponent implements OnDestroy {\n  constructor(public clockPickerService: ClockPickerService) { super(); }\n\n  get items() {\n    return config[this.clockPickerService.mode];\n  }\n\n  get fullTime(): string {\n    return this.clockPickerService.fullTime;\n  }\n\n  handleClose(): void {\n    this.close(this.fullTime);\n  }\n\n  cancel(): void {\n    this.close(null); //\n  }\n\n  handleOverlayClick(event: Event): void {\n    event.stopPropagation();\n\n    if (this.closeOnOverlayClick) {\n      this.cancel();\n    }\n  }\n\n  handleMovement(movement: string) {\n    switch (movement) {\n      case VerticalEventHandler.MovementUp:\n        return this.handleMovementUp();\n      case VerticalEventHandler.MovementDown:\n        return this.handleMovementDown();\n    }\n  }\n\n  handleMovementUp() {\n    return this.clockPickerService.isHoursMode\n      ? this.clockPickerService.increment(MODE_HOURS)\n      : this.clockPickerService.increment(MODE_MINUTES);\n  }\n\n  handleMovementDown() {\n    return this.clockPickerService.isHoursMode\n      ? this.clockPickerService.decrement(MODE_HOURS)\n      : this.clockPickerService.decrement(MODE_MINUTES);\n  }\n\n  handleItemChange(item: number) {\n    if (this.clockPickerService.isHoursMode) {\n      this.clockPickerService.setHours(item);\n      this.clockPickerService.setModeToMinutes();\n    } else {\n      this.clockPickerService.setMinutes(item);\n      this.close(this.fullTime);\n    }\n  }\n\n  ngOnDestroy() {\n    this.clockPickerService.reset();\n  }\n}\n","import { Injectable, Type, ViewContainerRef } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { DynamicComponentsService } from './dynamic-components.service';\nimport { ClockPickerDialogComponent } from '../components/clock-picker-dialog/clock-picker-dialog.component';\nimport { ClockPickerConfig } from '../interfaces';\n\n\n@Injectable()\nexport class ClockPickerDialogService {\n  viewContainerRef: ViewContainerRef;\n\n  constructor(public dynamicComponentsService: DynamicComponentsService) { }\n\n  public registerViewContainerRef(vcr: ViewContainerRef): void {\n    this.viewContainerRef = vcr;\n  }\n\n  public showClockPickerDialog(config?: ClockPickerConfig): Observable<any> {\n    return new Observable((subscriber) => this.dynamicComponentsService.loadDynamicComponent(\n      ClockPickerDialogComponent,\n      this.viewContainerRef,\n      subscriber,\n      config\n      )\n    );\n  }\n}\n","import { Directive, Input, HostListener, ViewContainerRef, ElementRef, forwardRef, EventEmitter, Output } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { AbstractValueAccessor } from '../classes/abstract-value-accessor';\nimport { ClockPickerConfig } from '../interfaces';\nimport { ClockPickerDialogService } from '../services/clock-picker-dialog.service';\n\n@Directive({\n  selector: '[ngClockPicker]',\n  providers: [{ provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => ClockPickerDirective), multi: true }],\n})\nexport class ClockPickerDirective extends AbstractValueAccessor {\n  constructor(\n    private elementRef: ElementRef,\n    private viewContainerRef: ViewContainerRef,\n    private clockPickerDialogService: ClockPickerDialogService,\n  ) { super(); }\n\n  @Input() ngClockPickerConfig: ClockPickerConfig;\n  @Output() ngClockPickerChange: EventEmitter<string> = new EventEmitter<string>();\n\n  @HostListener('focus')\n  onFocus(): void {\n    this.clockPickerDialogService\n      .showClockPickerDialog(this.ngClockPickerConfig)\n      .subscribe((data: string) => {\n        if (data) {\n          this.elementRef.nativeElement.value = data;\n          this.onChange(data);\n          this.ngClockPickerChange.emit(data);\n        }\n      });\n  }\n\n  ngOnInit(): void {\n    this.clockPickerDialogService.registerViewContainerRef(this.viewContainerRef);\n  }\n}\n\n","import { trigger, style, animate, transition, AnimationTriggerMetadata } from '@angular/animations';\n\nexport const scaleIn: AnimationTriggerMetadata = trigger(\n  'scaleIn', [\n    transition('hours => minutes', [\n      style({ opacity: 0, transform: 'scale(0)'}),\n      animate('200ms ease', style({ opacity: 1, transform: 'scale(1)' }))\n    ]),\n    transition('minutes => hours', [\n      style({ opacity: 0, transform: 'scale(0)' }),\n      animate('200ms ease', style({ opacity: 1, transform: 'scale(1)' }))\n    ])\n  ]\n);\n","import { Component, Output, EventEmitter, ViewEncapsulation } from '@angular/core';\n\nimport { ClockPickerService } from '../../services/clock-picker.service';\nimport { scaleIn } from '../../animations/scale-in';\nimport { config } from '../../utils/constants';\nimport { SelectedTime } from '../../interfaces';\n\n@Component({\n  selector: 'ng-circle',\n  templateUrl: './circle.component.html',\n  styleUrls: ['./circle.component.scss'],\n  animations: [scaleIn],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class CircleComponent {\n  @Output() onItemChange: EventEmitter<number> = new EventEmitter();\n\n  constructor(public clockPickerService: ClockPickerService) { }\n\n  get items(): Array<number> {\n    return config[this.mode];\n  }\n\n  get mode(): string {\n    return this.clockPickerService.mode;\n  }\n\n  get selected(): SelectedTime {\n    return this.clockPickerService.selected;\n  }\n\n  isSelected(item: number): boolean {\n    return this.selected[this.mode] === item;\n  }\n\n  handleClick(item: number) {\n    this.onItemChange.emit(item);\n  }\n}\n","import { Input, Component, ViewEncapsulation} from '@angular/core';\n\n@Component({\n  selector: 'ng-circle-button',\n  templateUrl: './circle-button.component.html',\n  styleUrls: ['./circle-button.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class CircleButtonComponent {\n  @Input() selected: boolean;\n\n  constructor() { }\n\n\n}\n","import {Component, ViewEncapsulation} from '@angular/core';\n\nimport { convertToTimeFormat } from '../../utils/time';\nimport { MODE_HOURS, MODE_MINUTES} from '../../utils/constants';\nimport { ClockPickerService } from '../../services/clock-picker.service';\n\n@Component({\n  selector: 'ng-time-display',\n  templateUrl: './time-display.component.html',\n  styleUrls: ['./time-display.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TimeDisplayComponent {\n\n  constructor(public clockPickerService: ClockPickerService) { }\n\n  get displayHours(): string {\n    return convertToTimeFormat(this.clockPickerService.selected.hours);\n  }\n\n  get displayMinutes(): string {\n    return convertToTimeFormat(this.clockPickerService.selected.minutes);\n  }\n\n  get isHoursMode(): boolean {\n    return this.clockPickerService.isHoursMode;\n  }\n\n  get hoursMode(): string {\n    return this.clockPickerService.hoursMode;\n  }\n\n  handleMinutesClick(): void {\n    this.clockPickerService.setMode(MODE_MINUTES);\n  }\n\n  handleHoursClick(): void {\n    this.clockPickerService.setMode(MODE_HOURS);\n  }\n}\n","import { Directive, HostListener, EventEmitter, Output, OnInit, Component } from '@angular/core';\nimport { Subject, merge } from 'rxjs';\n\nimport { VerticalEventHandler } from '../classes/vertical-event-handler';\n\n@Directive({\n  selector: '[ngMovementEmitter]'\n})\nexport class MovementEmitterDirective implements OnInit {\n  mouseDown$: Subject<MouseEvent> = new Subject<MouseEvent>();\n  mouseUp$:  Subject<MouseEvent> = new Subject<MouseEvent>();\n  mouseMove$:  Subject<MouseEvent> = new Subject<MouseEvent>();\n  touchMove$: Subject<TouchEvent> = new Subject<TouchEvent>();\n\n  verticalEventHandler = new VerticalEventHandler();\n\n  @Output() ngMovementEmitter: EventEmitter<string> = new EventEmitter<string>();\n  @HostListener('mousedown', ['$event']) onMouseDown(event) { this.mouseDown$.next(event); }\n  @HostListener('mouseup', ['$event']) onMouseUp(event) { this.mouseUp$.next(event); }\n  @HostListener('mousemove', ['$event']) onMouseMove(event) { this.mouseMove$.next(event); }\n  @HostListener('touchmove', ['$event']) onTouchMove(event) { this.touchMove$.next(event); }\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.watchMovement();\n    this.verticalEventHandler.verticalMovementEmitter\n      .subscribe((value: string) => this.ngMovementEmitter.emit(value));\n  }\n\n  watchMovement(): void {\n    merge(\n      this.mouseDown$,\n      this.mouseUp$,\n      this.mouseMove$,\n      this.touchMove$\n    ).subscribe((event: MouseEvent | TouchEvent) => this.verticalEventHandler.handleEvent(event));\n  }\n}\n","import { trigger, style, animate, transition, state, AnimationTriggerMetadata } from '@angular/animations';\nimport { HOURS_MODE_AM, HOURS_MODE_PM } from '../utils/constants';\n\nexport const hoursModeSlide: AnimationTriggerMetadata = trigger(\n  'hoursModeSlide', [\n    state(HOURS_MODE_AM, style({\n      transform: 'translateY(0)'\n    })),\n    state(HOURS_MODE_PM, style({\n      transform: 'translateY(-19px)'\n    })),\n    transition(`${HOURS_MODE_AM} => ${HOURS_MODE_PM}`, [\n      animate('200ms ease')\n    ]),\n    transition(`${HOURS_MODE_PM} => ${HOURS_MODE_AM}`, [\n      animate('200ms ease')\n    ]),\n  ]\n);\n","import { Component, OnInit } from '@angular/core';\n\nimport { ClockPickerService } from '../../services/clock-picker.service';\nimport { hoursModeSlide } from '../../animations/hours-mode-slide';\nimport { HOURS_MODE_AM, HOURS_MODE_PM } from '../../utils/constants';\n\n@Component({\n  selector: 'ng-hours-mode-panel',\n  templateUrl: './hours-mode-panel.component.html',\n  styleUrls: ['./hours-mode-panel.component.scss'],\n  animations: [hoursModeSlide],\n})\nexport class HoursModePanelComponent implements OnInit {\n  hoursModeOptions: string[] = [HOURS_MODE_AM, HOURS_MODE_PM];\n\n  get hoursMode(): string {\n    return this.clockPickerService.hoursMode;\n  }\n\n  toggleMode(): void {\n    this.clockPickerService.setHoursMode(this.hoursModeOptions.find((mode: string) => mode !== this.hoursMode));\n  }\n\n  constructor(public clockPickerService: ClockPickerService) { }\n\n  ngOnInit() {\n  }\n\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { ClockPickerDirective } from './directives/clock-picker.directive';\nimport { DynamicComponentsService } from './services/dynamic-components.service';\nimport { ClockPickerDialogComponent } from './components/clock-picker-dialog/clock-picker-dialog.component';\nimport { CircleComponent } from './components/circle/circle.component';\nimport { CircleButtonComponent } from './components/circle-button/circle-button.component';\nimport { TimeDisplayComponent } from './components/time-display/time-display.component';\nimport { MovementEmitterDirective } from './directives/movement-emitter.directive';\nimport { ClockPickerService } from './services/clock-picker.service';\nimport { HoursModePanelComponent } from './components/hours-mode-panel/hours-mode-panel.component';\nimport { ClockPickerDialogService } from './services/clock-picker-dialog.service';\n\n@NgModule({\n  declarations: [\n    ClockPickerDirective,\n    ClockPickerDialogComponent,\n    CircleComponent,\n    CircleButtonComponent,\n    TimeDisplayComponent,\n    MovementEmitterDirective,\n    HoursModePanelComponent,\n  ],\n  imports: [CommonModule, BrowserAnimationsModule],\n  exports: [ClockPickerDirective],\n  providers: [DynamicComponentsService, ClockPickerService, ClockPickerDialogService],\n  entryComponents: [ClockPickerDialogComponent],\n})\n\nexport class NgClockPickerLibModule { }\n"],"names":["tslib_1.__extends"],"mappings":"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"}
